{"version":3,"file":"static/js/804.4920fb9d.chunk.js","mappings":"sMAQMA,GAAO,eAAAC,KAAAA,UAAAC,MAAAA,aAWPC,GAAY,eAAAF,KAAAA,eAAAC,MAAAA,YAeZE,GAAS,gBAAAH,KAAAA,YAAAC,MAAAA,UAAAG,KAAAA,CAAA,aACKC,SAAAA,GAAK,OAAKA,EAAMC,QAAU,OAAS,oBAGjDC,GAAS,eAAAP,KAAAA,YAAAC,MAAAA,UAAAG,KAAAA,CAAA,aAGLC,SAAAA,GAAK,OAAKA,EAAMC,QAAUE,EAAAA,EAASH,EAAML,MAAQS,EAAAA,EAAAA,kBAGrDC,GAAQC,EAAAA,EAAAA,OAAK,YAAgC,IAA7BL,EAA6B,EAA7BA,QAASN,EAAoB,EAApBA,KAAMY,EAAc,EAAdA,QAC9BC,GAAYC,EAAAA,EAAAA,UAAQ,WACzB,OAAOd,EAAKe,QAAQ,OAAQ,MAC1B,CAACf,IACJ,OACC,UAACE,EAAD,CAAcU,QAASA,EAASI,UAAU,QAA1C,WACC,SAACT,EAAD,CAAWP,KAAMa,EAAWP,QAASA,EAArC,UACC,cAAGU,UAAA,mBAAuBV,EAAU,YAAc,uBADnD,YAAwDN,EAAxD,YAAgEM,KAGhE,SAACH,EAAD,CAAWG,QAASA,EAApB,SAA8BO,UAK3BI,GAAUN,EAAAA,EAAAA,OAAK,WACpB,OAAiDO,EAAAA,EAAAA,KAAzCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,aAEhC,OAAKF,GAGJ,SAACpB,EAAD,UACEoB,EAAOG,KAAIC,SAAAA,GAAC,OACZ,SAACb,EAAD,CAAeJ,SAAUc,EAAeI,SAASD,GAAIvB,KAAMuB,EAAGX,QAAS,kBAAMS,EAAaE,KAA9EA,QALK,QAWrB,Y,qCCvEA","sources":["components/Filters.js","webpack://celebration-calendar/./src/components/Filters.js?4649"],"sourcesContent":["import { memo, useMemo } from 'react'\nimport { styled } from 'linaria/react'\n\nimport { useEventContext } from 'context/EventContext'\nimport colors from 'utils/colors'\n\nimport { colorMap } from '../utils/eventUtils'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tmargin-bottom: 8px;\n\tmax-width: 1200px;\n\tflex: 0;\n`\n\nconst VenueWrapper = styled.div`\n\tpadding: 4px 8px;\n\tfont-size: 12px;\n\twhite-space: nowrap;\n\tmargin: 2px 4px;\n\tborder-radius: 4px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\talign-items: center;\n\tcursor: pointer;\n\tbackground: ${colors.darkBg};\n\tcolor: white !important;\n`\n\nconst VenueName = styled.span`\n\ttext-decoration: ${props => (props.enabled ? 'none' : 'line-through')};\n`\n\nconst Indicator = styled.div`\n\tmargin-right: 8px;\n\tfilter: none;\n\tcolor: ${props => (props.enabled ? colorMap[props.name] : colors.darkInactive)};\n`\n\nconst Venue = memo(({ enabled, name, onClick }) => {\n\tconst cleanName = useMemo(() => {\n\t\treturn name.replace('The ', '')\n\t}, [name])\n\treturn (\n\t\t<VenueWrapper onClick={onClick} className=\"venue\">\n\t\t\t<Indicator name={cleanName} enabled={enabled} key={`i-${name}-${enabled}`}>\n\t\t\t\t<i className={`fa-solid ${enabled ? 'fa-circle' : 'fa-circle-dashed'}`}></i>\n\t\t\t</Indicator>\n\t\t\t<VenueName enabled={enabled}>{cleanName}</VenueName>\n\t\t</VenueWrapper>\n\t)\n})\n\nconst Filters = memo(() => {\n\tconst { venues, disabledVenues, toggleFilter } = useEventContext()\n\n\tif (!venues) return null\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{venues.map(v => (\n\t\t\t\t<Venue key={v} enabled={!disabledVenues.includes(v)} name={v} onClick={() => toggleFilter(v)} />\n\t\t\t))}\n\t\t</Wrapper>\n\t)\n})\n\nexport default Filters\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Wrapper","name","class","VenueWrapper","VenueName","vars","props","enabled","Indicator","colorMap","colors","Venue","memo","onClick","cleanName","useMemo","replace","className","Filters","useEventContext","venues","disabledVenues","toggleFilter","map","v","includes"],"sourceRoot":""}