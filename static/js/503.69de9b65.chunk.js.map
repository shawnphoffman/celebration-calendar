{"version":3,"file":"static/js/503.69de9b65.chunk.js","mappings":"sPAKMA,GAAU,eAAAC,KAAAA,aAAAC,MAAAA,YAKVC,EAAe,SAAC,GAAc,IAAZC,EAAY,EAAZA,MACfC,GAAcC,EAAAA,EAAAA,KAAdD,UAMR,OAJmBE,EAAAA,EAAAA,UAAQ,WAC1B,OAAOF,EAAUG,SAASJ,EAAMK,MAC9B,CAACL,EAAMK,GAAIJ,KAIZ,SAACL,EAAD,WACC,cAAGU,UAAU,uBADd,UAAoBN,EAAMK,GAA1B,iBAMK,MAGR,GAAeE,EAAAA,EAAAA,MAAKR,G,QCrBpB,IAAMS,GAAO,gBAAAX,KAAAA,UAAAC,MAAAA,aAKPW,GAAY,eAAAZ,KAAAA,eAAAC,MAAAA,aAUZY,GAAS,eAAAb,KAAAA,YAAAC,MAAAA,YAUTa,GAAK,eAAAd,KAAAA,QAAAC,MAAAA,YAcLc,GAAO,eAAAf,KAAAA,UAAAC,MAAAA,WAAAe,KAAAA,CAAA,cACQC,SAAAA,GAAC,OAAIA,EAAEC,QAmBtBC,GAAK,eAAAnB,KAAAA,QAAAC,MAAAA,YAMLmB,GAAU,eAAApB,KAAAA,aAAAC,MAAAA,WAAAe,KAAAA,CAAA,cAEKK,SAAAA,GAAC,uBAAIA,EAAEC,aAAN,+BAEhBC,GAAW,eAAAvB,KAAAA,cAAAC,MAAAA,YAOXuB,GAAO,eAAAxB,KAAAA,UAAAC,MAAAA,aAWPwB,GAAM,gBAAAzB,KAAAA,SAAAC,MAAAA,aAINyB,GAAa,eAAA1B,KAAAA,gBAAAC,MAAAA,aAeb0B,EAAgB,SAAC,GAAc,IAAZxB,EAAY,EAAZA,MAClByB,GAAWtB,EAAAA,EAAAA,UAAQ,WACxB,OAAOuB,EAAAA,GAAQ,IAAIC,KAAK3B,EAAM4B,SAASC,YACrC,CAAC7B,EAAM4B,UAEJE,GAAO3B,EAAAA,EAAAA,UACZ,iBAAO,CACN4B,OAAOC,EAAAA,EAAAA,IAAWhC,EAAM4B,SACxBK,KAAKD,EAAAA,EAAAA,IAAWhC,EAAMkC,UAEvB,CAAClC,EAAMkC,MAAOlC,EAAM4B,UAGrB,OACC,SAACnB,EAAD,WACC,UAACC,EAAD,YACC,SAACE,EAAD,CAASG,GAAIoB,EAAAA,GAASV,GAAtB,SAAkCA,KAClC,SAACR,EAAD,CAAYE,MAAOnB,EAAMmB,SACzB,UAACR,EAAD,YACC,UAACK,EAAD,WACEhB,EAAMoC,QADR,KACiB,UAAC5B,EAAD,mBAAeR,EAAMK,GAArB,WAEjB,UAACgB,EAAD,YACC,UAACC,EAAD,WACEQ,EAAKC,MADP,MACiBD,EAAKG,QAEtB,UAACX,EAAD,eAAUtB,EAAMqC,MAAMC,OAAtB,WAED,SAAClB,EAAD,UAAcpB,EAAMuC,kBAErB,SAAChB,EAAD,WACC,SAACiB,EAAD,CAAmBxC,MAAOA,YAO/B,GAAeO,EAAAA,EAAAA,MAAKiB,G,qBChJdd,GAAS,eAAAb,KAAAA,YAAAC,MAAAA,YAcT2C,EAAgB,WAAM,MAC3B,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eAEA,OAAKA,IAAc,OAALA,QAAK,IAALA,OAAAA,EAAAA,EAAOC,UAAUC,WAAjBF,OAA4BA,QAA5BA,IAA4BA,GAA5BA,QAAAA,EAA4BA,EAAOG,sBAAnCH,IAAAA,OAAAA,EAA4BA,EAAuBE,SAKhE,SAAC,EAAD,UACEF,EAAMI,UAAUC,KAAI9B,SAAAA,GACpB,OAAIyB,EAAMG,eAAe1C,SAASc,EAAEmB,OAAe,MAC5C,SAACY,EAAD,CAAuBjD,MAAOkB,GAAbA,EAAEb,UAPrB,SAAC6C,EAAA,EAAD,KAaT,GAAe3C,EAAAA,EAAAA,MAAKkC,G,oCCrCpB,c,4BCAA,c,2BCAA","sources":["components/print/PrintFavoriteIcon.js","components/print/PrintEvent.js","pages/PrintSchedule.js","webpack://celebration-calendar/./src/components/print/PrintEvent.js?bffd","webpack://celebration-calendar/./src/components/print/PrintFavoriteIcon.js?829e","webpack://celebration-calendar/./src/pages/PrintSchedule.js?55f3"],"sourcesContent":["import { memo, useMemo } from 'react'\nimport { styled } from '@linaria/react'\n\nimport { useFavoritesContext } from 'context/FavoritesContext'\n\nconst IconButton = styled.div`\n\tcolor: var(--heart);\n\tfont-size: 26px;\n`\n\nconst FavoriteIcon = ({ event }) => {\n\tconst { favorites } = useFavoritesContext()\n\n\tconst isFavorite = useMemo(() => {\n\t\treturn favorites.includes(event.id)\n\t}, [event.id, favorites])\n\n\tif (isFavorite) {\n\t\treturn (\n\t\t\t<IconButton key={`${event.id}.heart-solid`}>\n\t\t\t\t<i className=\"fa-solid fa-heart\"></i>\n\t\t\t</IconButton>\n\t\t)\n\t}\n\n\treturn null\n}\n\nexport default memo(FavoriteIcon)\n","import React, { memo, useMemo } from 'react'\nimport { styled } from 'linaria/react'\n\nimport { dayColor, dayName, formatTime } from 'utils/dataUtils'\n\nimport PrintFavoriteIcon from './PrintFavoriteIcon'\n\nconst EventId = styled.span`\n\tfont-size: 10px;\n\tfont-weight: normal;\n\tmargin-left: 8px;\n`\nconst PrintWrapper = styled.div`\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n\tpage-break-after: inherit;\n\tdisplay: block;\n\n\t@media print {\n\t\tborder-bottom: 1px solid black;\n\t}\n`\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tborder-bottom: 2px solid var(--bg);\n\tposition: relative;\n\n\t@media print {\n\t\tborder: none;\n\t}\n`\nconst Event = styled.div`\n\tpadding: 8px;\n\tflex: 1;\n\tbackground: var(--outline);\n\tcolor: var(--text);\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n\tposition: relative;\n\n\t@media print {\n\t\tbackground: none;\n\t\tcolor: black;\n\t}\n`\nconst DayName = styled.div`\n\tbackground-color: ${p => p.bg};\n\tcolor: var(--text);\n\twriting-mode: vertical-lr;\n\tdisplay: flex;\n\tjustify-content: center;\n\ttransform: rotate(180deg);\n\tpadding: 4px;\n\tfont-size: 12px;\n\tfont-weight: bold;\n\tflex: 0;\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n\n\t@media print {\n\t\tcolor: black;\n\t\t/* background: #ddd; */\n\t\tbackground: none;\n\t}\n`\nconst Title = styled.div`\n\tfont-weight: bold;\n\tfont-size: 14px;\n\tdisplay: flex;\n\talign-items: center;\n`\nconst ColorBlock = styled.div`\n\twidth: 8px;\n\tbackground-color: ${e => e.color ?? `var(--fallback)`};\n`\nconst Description = styled.div`\n\tfont-size: 12px;\n\tmargin-top: 4px;\n\twhite-space: pre-line;\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n`\nconst Details = styled.div`\n\tfont-style: italic;\n\tfont-size: 12px;\n\tmargin-top: 4px;\n\topacity: 0.8;\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n\n\tdisplay: flex;\n\tflex-wrap: wrap;\n`\nconst NoWrap = styled.span`\n\tmargin-right: 8px;\n\twhite-space: nowrap;\n`\nconst ActionWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tbackground: var(--outline);\n\tpadding: 8px;\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n\n\t@media print {\n\t\t/* color: black; */\n\t\tbackground: none;\n\t}\n`\n\nconst EventListItem = ({ event }) => {\n\tconst eventDay = useMemo(() => {\n\t\treturn dayName[new Date(event.startAt).getDay()]\n\t}, [event.startAt])\n\n\tconst time = useMemo(\n\t\t() => ({\n\t\t\tstart: formatTime(event.startAt),\n\t\t\tend: formatTime(event.endAt),\n\t\t}),\n\t\t[event.endAt, event.startAt]\n\t)\n\n\treturn (\n\t\t<PrintWrapper>\n\t\t\t<Container>\n\t\t\t\t<DayName bg={dayColor[eventDay]}>{eventDay}</DayName>\n\t\t\t\t<ColorBlock color={event.color} />\n\t\t\t\t<Event>\n\t\t\t\t\t<Title>\n\t\t\t\t\t\t{event.summary} <EventId>[ID: {event.id}]</EventId>\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Details>\n\t\t\t\t\t\t<NoWrap>\n\t\t\t\t\t\t\t{time.start} - {time.end}\n\t\t\t\t\t\t</NoWrap>\n\t\t\t\t\t\t<NoWrap>({event.venue.trim()})</NoWrap>\n\t\t\t\t\t</Details>\n\t\t\t\t\t<Description>{event.description}</Description>\n\t\t\t\t</Event>\n\t\t\t\t<ActionWrapper>\n\t\t\t\t\t<PrintFavoriteIcon event={event} />\n\t\t\t\t</ActionWrapper>\n\t\t\t</Container>\n\t\t</PrintWrapper>\n\t)\n}\n\nexport default memo(EventListItem)\n","import React, { memo } from 'react'\nimport { styled } from 'linaria/react'\n\nimport Loading from 'components/Loading'\nimport PrintEvent from 'components/print/PrintEvent'\nimport { useEventContext } from 'context/EventContext'\n\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tborder-radius: 8px;\n\n\t@media print {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tpage-break-inside: inherit;\n\t\tbreak-inside: inherit;\n\t}\n`\nconst PrintSchedule = () => {\n\tconst [state] = useEventContext()\n\n\tif (!state || state?.allVenues.length === state?.disabledVenues?.length) {\n\t\treturn <Loading />\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t{state.allEvents.map(e => {\n\t\t\t\tif (state.disabledVenues.includes(e.venue)) return null\n\t\t\t\treturn <PrintEvent key={e.id} event={e} />\n\t\t\t})}\n\t\t</Container>\n\t)\n}\n\nexport default memo(PrintSchedule)\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["IconButton","name","class","FavoriteIcon","event","favorites","useFavoritesContext","useMemo","includes","id","className","memo","EventId","PrintWrapper","Container","Event","DayName","vars","p","bg","Title","ColorBlock","e","color","Description","Details","NoWrap","ActionWrapper","EventListItem","eventDay","dayName","Date","startAt","getDay","time","start","formatTime","end","endAt","dayColor","summary","venue","trim","description","PrintFavoriteIcon","PrintSchedule","useEventContext","state","allVenues","length","disabledVenues","allEvents","map","PrintEvent","Loading"],"sourceRoot":""}