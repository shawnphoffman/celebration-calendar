{"version":3,"file":"static/js/33.7c5226ad.chunk.js","mappings":"iRAUMA,GAAS,eAAAC,KAAAA,YAAAC,MAAAA,aAQTC,GAAS,eAAAF,KAAAA,YAAAC,MAAAA,aAQTE,EAAS,WACd,OAAgBC,EAAAA,EAAAA,MAATC,GAAP,eAGMC,GAAWC,EAAAA,EAAAA,MAGXC,GAAkBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOC,EAAAA,EAAAA,IAAIJ,EAAD,mBACR,CAACA,IAGEK,GAAkBC,EAAAA,EAAAA,IAAsBJ,EAAiB,IAGzDK,GAAYJ,EAAAA,EAAAA,UAAQ,WACzB,OAAKJ,GAAUA,EAAMQ,UACW,aAAb,OAAfF,QAAe,IAAfA,OAAAA,EAAAA,EAAiBG,SAAwB,OAACH,QAAD,IAACA,GAAAA,EAAiBI,KAG/CC,OAAOC,KAAKN,EAAgBI,MAAMG,QAChD,SAACC,EAAMC,GAEN,OADAD,EAAO,GAAH,eAAOA,IAAP,OAAgBH,OAAOK,OAAOV,EAAgBI,KAAKK,SAF1C,OAKVf,EAAMQ,YAGGS,MAAK,SAACC,EAAGC,GACtB,IAAMC,EAAS,IAAIC,KAAKH,EAAEI,WACpBC,EAAS,IAAIF,KAAKF,EAAEG,WACpBE,EAAO,IAAIH,KAAKH,EAAEO,SAClBC,EAAO,IAAIL,KAAKF,EAAEM,SAExB,OAAIL,EAASG,EAAe,EACxBH,EAASG,GAAgB,EACzBC,EAAOE,EAAa,EACpBF,EAAOE,GAAc,EACrBR,EAAES,QAAUR,EAAEQ,QAAgB,EAC9BT,EAAES,QAAUR,EAAEQ,SAAiB,EAC5B,KAtBD3B,EAAMQ,UAFyB,KA2BrC,CAACF,EAAgBI,KAAjB,OAAuBJ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAiBG,OAAQT,IAEnD,OAAKA,GAAUQ,GASd,SAACd,EAAD,WACC,SAACG,EAAD,WACC,SAAC,EAAA+B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,SACEtB,EAAUuB,KAAIC,SAAAA,GACd,OAAIhC,EAAMiC,eAAeC,SAASF,EAAEG,OAAe,MAC5C,SAACC,EAAA,EAAD,CAA0BC,MAAOL,GAAbA,EAAEM,cAb1B,SAACR,EAAA,EAAD,KAqBT,GAAehB,EAAAA,EAAAA,MAAKhB,G,QCzFpB,IAAMyC,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,iCAErBC,EAAW,WAChB,OACC,iCACC,SAACF,EAAD,KACA,SAAC,EAAD,QAKH,GAAezB,EAAAA,EAAAA,MAAK2B,I,4BCdpB","sources":["components/events/Agenda.js","pages/Schedule.js","webpack://celebration-calendar/./src/components/events/Agenda.js?fd46"],"sourcesContent":["import { memo, Suspense, useMemo } from 'react'\nimport { useDatabase, useDatabaseObjectData } from 'reactfire'\nimport { ref } from 'firebase/database'\nimport { styled } from 'linaria/react'\n\nimport Loading from 'components/Loading'\nimport { useEventContext } from 'context/EventContext'\n\nimport EventListItem from './EventListItem'\n\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\toverflow-x: hidden;\n\tbackground: var(--outline);\n\tborder-radius: 8px;\n`\nconst ScrollBox = styled.div`\n\twidth: 100%;\n\toverflow-y: scroll;\n\t::-webkit-scrollbar-corner {\n\t\tbackground: var(--transparent);\n\t}\n`\n\nconst Agenda = () => {\n\tconst [state] = useEventContext()\n\n\t// ============================================================\n\tconst database = useDatabase()\n\n\t// Custom Events Ref\n\tconst customEventsRef = useMemo(() => {\n\t\treturn ref(database, `custom-events`)\n\t}, [database])\n\n\t// Custom Events Resp\n\tconst customEventsRep = useDatabaseObjectData(customEventsRef, {})\n\n\t// All Events\n\tconst allEvents = useMemo(() => {\n\t\tif (!state || !state.allEvents) return []\n\t\tif (customEventsRep?.status !== 'success' || !customEventsRep?.data) {\n\t\t\treturn state.allEvents\n\t\t} else {\n\t\t\tconst events = Object.keys(customEventsRep.data).reduce(\n\t\t\t\t(memo, curr) => {\n\t\t\t\t\tmemo = [...memo, ...Object.values(customEventsRep.data[curr])]\n\t\t\t\t\treturn memo\n\t\t\t\t},\n\t\t\t\t[...state.allEvents]\n\t\t\t)\n\n\t\t\treturn events.sort((a, b) => {\n\t\t\t\tconst aStart = new Date(a.startDate)\n\t\t\t\tconst bStart = new Date(b.startDate)\n\t\t\t\tconst aEnd = new Date(a.endDate)\n\t\t\t\tconst bEnd = new Date(b.endDate)\n\n\t\t\t\tif (aStart > bStart) return 1\n\t\t\t\tif (aStart < bStart) return -1\n\t\t\t\tif (aEnd > bEnd) return 1\n\t\t\t\tif (aEnd < bEnd) return -1\n\t\t\t\tif (a.summary > b.summary) return 1\n\t\t\t\tif (a.summary < b.summary) return -1\n\t\t\t\treturn 0\n\t\t\t})\n\t\t}\n\t}, [customEventsRep.data, customEventsRep?.status, state])\n\n\tif (!state || !allEvents) {\n\t\treturn <Loading />\n\t}\n\n\t// console.log('Agenda.render', {\n\t// \tstate,\n\t// })\n\n\treturn (\n\t\t<Container>\n\t\t\t<ScrollBox>\n\t\t\t\t<Suspense fallback={<Loading />}>\n\t\t\t\t\t{allEvents.map(e => {\n\t\t\t\t\t\tif (state.disabledVenues.includes(e.venue)) return null\n\t\t\t\t\t\treturn <EventListItem key={e.id} event={e} />\n\t\t\t\t\t})}\n\t\t\t\t</Suspense>\n\t\t\t</ScrollBox>\n\t\t</Container>\n\t)\n}\n\nexport default memo(Agenda)\n","import { lazy, memo } from 'react'\n\nimport Agenda from 'components/events/Agenda'\n\nconst Filters = lazy(() => import('components/events/Filters'))\n\nconst Schedule = () => {\n\treturn (\n\t\t<>\n\t\t\t<Filters />\n\t\t\t<Agenda />\n\t\t</>\n\t)\n}\n\nexport default memo(Schedule)\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Container","name","class","ScrollBox","Agenda","useEventContext","state","database","useDatabase","customEventsRef","useMemo","ref","customEventsRep","useDatabaseObjectData","allEvents","status","data","Object","keys","reduce","memo","curr","values","sort","a","b","aStart","Date","startDate","bStart","aEnd","endDate","bEnd","summary","Suspense","fallback","Loading","map","e","disabledVenues","includes","venue","EventListItem","event","id","Filters","lazy","Schedule"],"sourceRoot":""}