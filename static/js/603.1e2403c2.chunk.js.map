{"version":3,"file":"static/js/603.1e2403c2.chunk.js","mappings":"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","sources":["context/FavoriteVendorsContext.js","context/VendorContext.js","pages/Vendors.js"],"sourcesContent":["import React, { createContext, memo, useCallback, useContext, useEffect, useMemo } from 'react'\nimport { useDatabase, useDatabaseObjectData, useSigninCheck, useUser } from 'reactfire'\nimport { equalTo, orderByValue, query, ref, set } from 'firebase/database'\n\nimport useLocalStorage from 'hooks/useLocalStorage'\n\nconst favoritesStorageKey = 'SWC.FavoriteVendors'\n\nconst initialState = {\n\tfavorites: [],\n\ttoggleFavorite: () => {},\n}\n\nconst FavoriteVendorsContext = createContext(initialState)\n\nconst FavoriteVendorsProvider = ({ children }) => {\n\t// Non-Auth Storage\n\tconst [favorites, setFavorites] = useLocalStorage(favoritesStorageKey, [])\n\n\t// ============================================================\n\n\t// Firebase\n\tconst { status: signinStatus, data: signInCheckResult } = useSigninCheck()\n\tconst { data: user } = useUser()\n\tconst database = useDatabase()\n\n\t// ============================================================\n\n\t// User Favorites Query\n\tconst userFavQ = useMemo(() => {\n\t\tconst userFavRef = ref(database, `user-favorite-vendors/${user?.uid}`)\n\t\tconst userFavQuery = query(userFavRef, orderByValue())\n\t\treturn query(userFavQuery, equalTo('true'))\n\t}, [database, user])\n\n\t// User Favorites Resp\n\tconst userFavResp = useDatabaseObjectData(userFavQ, {})\n\n\t// User Favorite\n\tconst userFaves = useMemo(() => {\n\t\tif (userFavResp?.status !== 'success' || !userFavResp?.data) return []\n\t\treturn Object.keys(userFavResp?.data) || []\n\t}, [userFavResp?.data, userFavResp?.status])\n\n\t// ============================================================\n\n\t// Add/Remove User Favorite\n\tconst toggleFavorite = useCallback(\n\t\t(id, newState) => {\n\t\t\tif (signinStatus === 'success' && signInCheckResult?.signedIn) {\n\t\t\t\tconst userFavRef = ref(database, `user-favorite-vendors/${user?.uid}/${id}`)\n\t\t\t\tset(userFavRef, newState ? 'true' : null)\n\t\t\t\tconsole.log('UPDATING FIREBASE WITH FAVORITE')\n\t\t\t} else {\n\t\t\t\tconst existing = JSON.parse(localStorage.getItem(favoritesStorageKey) || '[]')\n\t\t\t\tif (newState) {\n\t\t\t\t\tconsole.log('ADDING NEW FAVORITE TO STORAGE')\n\t\t\t\t\tsetFavorites([...existing, id])\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('REMOVING FAVORITE FROM STORAGE')\n\t\t\t\t\tsetFavorites(existing.filter(x => x !== id))\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[database, setFavorites, signInCheckResult?.signedIn, signinStatus, user?.uid]\n\t)\n\n\t// ============================================================\n\n\t// Authenticated Persistence\n\tuseEffect(() => {\n\t\tif (signinStatus === 'success' && signInCheckResult?.signedIn && userFavResp.status === 'success') {\n\t\t\t// console.log('USER FAVES CHANGED', userFaves)\n\t\t\tconsole.log('FIREBASE CHANGED. UPDATING STORAGE')\n\t\t\tsetFavorites(userFaves)\n\t\t}\n\t}, [setFavorites, signInCheckResult?.signedIn, signinStatus, userFavResp.status, userFaves])\n\n\t// ============================================================\n\n\t// console.log({ userFaves, user })\n\n\tconst value = useMemo(() => {\n\t\treturn {\n\t\t\tfavorites,\n\t\t\ttoggleFavorite,\n\t\t}\n\t}, [favorites, toggleFavorite])\n\n\treturn <FavoriteVendorsContext.Provider value={value}>{children}</FavoriteVendorsContext.Provider>\n}\n\nexport const useFavoriteVendorsContext = () => useContext(FavoriteVendorsContext)\n\nexport default memo(FavoriteVendorsProvider)\n","import React, { createContext, memo, useContext, useEffect, useReducer } from 'react'\n\n// import * as Panelbear from '@panelbear/panelbear-js'\n// import Vendor from 'utils/events'\nimport { processApiVendors } from 'utils/dataUtils'\n\nconst VendorContext = createContext()\n\nexport const VendorAction = {\n\tSET_VENDORS: 'SET_VENDORS',\n}\n\nconst initialReducerState = {\n\tallVendors: [],\n\tallTattoos: [],\n}\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase VendorAction.SET_VENDORS:\n\t\t\t// Don't set it multiple times\n\t\t\tif (state.allVendors.length > 0) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tallVendors: action.vendors,\n\t\t\t\tallTattoos: action.tattooArtists,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst VendorProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(reducer, initialReducerState)\n\n\tuseEffect(() => {\n\t\tfetch(process.env.REACT_APP_VENDOR_ENDPOINT)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconst { vendors, tattooArtists } = processApiVendors(data)\n\t\t\t\tdispatch({ type: VendorAction.SET_VENDORS, vendors, tattooArtists })\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\t// Panelbear.track(Vendor.FetchFailure)\n\t\t\t\timport('../data/vendors.json').then(rawVendors => {\n\t\t\t\t\tconst { vendors, tattooArtists } = processApiVendors(rawVendors)\n\t\t\t\t\tdispatch({ type: VendorAction.SET_VENDORS, vendors, tattooArtists })\n\t\t\t\t})\n\t\t\t})\n\t}, [])\n\n\treturn <VendorContext.Provider value={[state, dispatch]}>{children}</VendorContext.Provider>\n}\n\nexport const useVendorContext = () => useContext(VendorContext)\n\nexport default memo(VendorProvider)\n","import { lazy, memo } from 'react'\n\nimport FavoriteVendorsProvider from 'context/FavoriteVendorsContext'\nimport VendorProvider from 'context/VendorContext'\n\n// import Agenda from 'components/v2/Agenda'\n\nconst VendorList = lazy(() => import('components/vendors/VendorList'))\n\nconst Vendors = () => {\n\treturn (\n\t\t<VendorProvider>\n\t\t\t<FavoriteVendorsProvider>\n\t\t\t\t<VendorList />\n\t\t\t</FavoriteVendorsProvider>\n\t\t</VendorProvider>\n\t)\n}\n\nexport default memo(Vendors)\n"],"names":["favoritesStorageKey","initialState","favorites","toggleFavorite","FavoriteVendorsContext","createContext","FavoriteVendorsProvider","children","useLocalStorage","setFavorites","useSigninCheck","signinStatus","status","signInCheckResult","data","user","useUser","database","useDatabase","userFavQ","useMemo","userFavRef","ref","uid","userFavQuery","query","orderByValue","equalTo","userFavResp","useDatabaseObjectData","userFaves","Object","keys","useCallback","id","newState","signedIn","set","console","log","existing","JSON","parse","localStorage","getItem","filter","x","useEffect","value","Provider","useFavoriteVendorsContext","useContext","memo","VendorContext","VendorAction","initialReducerState","allVendors","allTattoos","reducer","state","action","type","length","vendors","tattooArtists","VendorProvider","useReducer","dispatch","fetch","process","then","res","json","processApiVendors","catch","e","rawVendors","useVendorContext","VendorList","lazy","Vendors"],"sourceRoot":""}