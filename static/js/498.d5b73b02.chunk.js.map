{"version":3,"file":"static/js/498.d5b73b02.chunk.js","mappings":"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","sources":["components/events/CopyUrlIcon.js","pages/UserFavorites.js","webpack://celebration-calendar/./src/components/events/CopyUrlIcon.js?2799","webpack://celebration-calendar/./src/pages/UserFavorites.js?1889"],"sourcesContent":["import { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { generatePath } from 'react-router-dom'\nimport { useSigninCheck, useUser } from 'reactfire'\nimport { styled } from '@linaria/react'\nimport * as Panelbear from '@panelbear/panelbear-js'\nimport copy from 'copy-to-clipboard'\n\nimport Routes from 'config/routes'\nimport Event from 'utils/events'\n\nexport const Button = styled.div`\n\tcolor: ${p => (p.copied ? 'var(--green)' : 'var(--linkAlt)')};\n\ttransition: all 0.5s;\n\tcursor: pointer;\n\tmargin-left: 8px;\n\n\t&:hover {\n\t\tcolor: ${p => (p.copied ? 'var(--green)' : 'var(--linkHover)')};\n\t}\n`\n\nconst CopyUrlIcon = () => {\n\tconst [copied, setCopied] = useState(false)\n\tconst { status, data: signInCheckResult } = useSigninCheck()\n\tconst { data: user } = useUser()\n\n\t// console.log('ICON', { status, signInCheckResult, user })\n\n\tconst uid = useMemo(() => (user ? user.uid : null), [user])\n\n\tconst url = useMemo(() => (!uid ? null : `${window.location.origin}/#${generatePath(Routes.FavoritesList.path, { uid })}`), [uid])\n\n\tconst logCopy = useCallback(\n\t\te => {\n\t\t\te.stopPropagation()\n\t\t\tcopy(url)\n\t\t\tsetCopied(true)\n\t\t\tPanelbear.track(Event.FavoritesLinkCopied)\n\t\t},\n\t\t[url]\n\t)\n\n\tuseEffect(() => {\n\t\tlet t = () => {}\n\t\tif (copied) {\n\t\t\tt = setTimeout(() => {\n\t\t\t\tsetCopied(false)\n\t\t\t}, 3000)\n\t\t}\n\t\treturn () => t\n\t}, [copied])\n\n\tif (status !== 'success' || !signInCheckResult?.signedIn || !uid) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<Button copied={copied} key={`link-${uid}-${copied}`} onClickCapture={logCopy} title=\"Copy Link to Share\">\n\t\t\t{copied ? <i className=\"fa-light fa-clipboard-check fa-beat-fade\"></i> : <i className=\"fa-light fa-clipboard\"></i>}\n\t\t</Button>\n\t)\n}\n\nexport default memo(CopyUrlIcon)\n","import { memo, useMemo } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDatabase, useDatabaseObjectData, useSigninCheck, useUser } from 'reactfire'\nimport { ref } from 'firebase/database'\nimport { styled } from 'linaria/react'\n\nimport CopyUrlIcon from 'components/events/CopyUrlIcon'\nimport EventListItem from 'components/events/EventListItem'\nimport { PageTitle } from 'components/styles'\nimport Routes from 'config/routes'\nimport { useEventContext } from 'context/EventContext'\nimport { useFavoritesContext } from 'context/FavoritesContext'\n\nconst Divider = styled.hr`\n\twidth: 100%;\n\tborder-color: red;\n`\nconst NoFavorites = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tflex: 0;\n\tmargin-top: 16px;\n\tfont-weight: bold;\n`\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\toverflow-x: hidden;\n\tbackground: var(--bg);\n\tborder-radius: 8px;\n\tflex-direction: column;\n\talign-items: center;\n`\nconst ScrollBox = styled.div`\n\twidth: 100%;\n\toverflow-y: scroll;\n\t::-webkit-scrollbar-corner {\n\t\tbackground: var(--transparent);\n\t}\n`\nconst LoginPrompt = styled.div`\n\tmargin-bottom: 8px;\n`\nconst Link = styled(NavLink)`\n\tcolor: var(--linkAlt);\n\tfont-weight: bold;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\tcolor: var(--linkHover);\n\t}\n`\n\nconst Favorites = () => {\n\tconst [state] = useEventContext()\n\tconst { favorites: ids } = useFavoritesContext()\n\tconst { status, data: signInCheckResult } = useSigninCheck()\n\tconst database = useDatabase()\n\tconst { data: user } = useUser()\n\n\tconst hasFavorites = useMemo(() => {\n\t\treturn !!ids.length\n\t}, [ids])\n\n\tconst showLoginPrompt = useMemo(() => {\n\t\treturn status === 'success' && !signInCheckResult?.signedIn\n\t}, [status, signInCheckResult])\n\n\tconst favorites = useMemo(() => {\n\t\tif (!state?.allEvents) return []\n\t\treturn state.allEvents.filter(e => {\n\t\t\treturn ids.includes(e.id)\n\t\t})\n\t}, [ids, state.allEvents])\n\n\t// ============================================================\n\n\t// User Events Ref\n\tconst userEventsRef = useMemo(() => {\n\t\tif (!user) return ref(database, `wow`)\n\t\treturn ref(database, `user-events/${user?.uid}`)\n\t}, [database, user])\n\n\t// User Events Resp\n\tconst userEventsRep = useDatabaseObjectData(userEventsRef, {})\n\n\t// User Events\n\tconst userEvents = useMemo(() => {\n\t\tif (userEventsRep?.status !== 'success' || !userEventsRep?.data) return null\n\t\tif (!userEventsRep?.data) {\n\t\t\treturn null\n\t\t} else {\n\t\t\treturn Object.values(userEventsRep.data).sort((a, b) => {\n\t\t\t\tconst aStart = new Date(a.startDate)\n\t\t\t\tconst bStart = new Date(b.startDate)\n\t\t\t\tconst aEnd = new Date(a.endDate)\n\t\t\t\tconst bEnd = new Date(b.endDate)\n\n\t\t\t\tif (aStart > bStart) return 1\n\n\t\t\t\tif (aStart < bStart) return -1\n\n\t\t\t\tif (aEnd > bEnd) return 1\n\n\t\t\t\tif (aEnd < bEnd) return -1\n\n\t\t\t\tif (a.summary > b.summary) return 1\n\n\t\t\t\tif (a.summary < b.summary) return -1\n\n\t\t\t\treturn 0\n\t\t\t})\n\t\t}\n\t}, [userEventsRep?.data, userEventsRep?.status])\n\n\t// ============================================================\n\n\treturn (\n\t\t<Container>\n\t\t\t<PageTitle>\n\t\t\t\tYour Favorited Events <CopyUrlIcon />\n\t\t\t</PageTitle>\n\t\t\t{showLoginPrompt && (\n\t\t\t\t<>\n\t\t\t\t\t<LoginPrompt>\n\t\t\t\t\t\tIf you <Link to={Routes.Login.path}>log in</Link>, we'll save your favorites across your devices!\n\t\t\t\t\t</LoginPrompt>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<ScrollBox>\n\t\t\t\t{!hasFavorites && !userEvents && <NoFavorites>No favorites to display...</NoFavorites>}\n\t\t\t\t{userEvents && userEvents.map(event => <EventListItem event={event} key={event.id} forceOpen />)}\n\t\t\t\t{hasFavorites && userEvents && <Divider />}\n\t\t\t\t{favorites.map(event => (\n\t\t\t\t\t<EventListItem event={event} key={event.id} forceOpen />\n\t\t\t\t))}\n\t\t\t</ScrollBox>\n\t\t</Container>\n\t)\n}\n\nexport default memo(Favorites)\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Button","name","class","vars","p","copied","CopyUrlIcon","useState","setCopied","useSigninCheck","status","signInCheckResult","data","user","useUser","uid","useMemo","url","window","location","origin","generatePath","Routes","logCopy","useCallback","e","stopPropagation","copy","Panelbear","Event","useEffect","t","setTimeout","signedIn","onClickCapture","title","className","memo","Divider","NoFavorites","Container","ScrollBox","LoginPrompt","Link","NavLink","Favorites","useEventContext","state","ids","useFavoritesContext","favorites","database","useDatabase","hasFavorites","length","showLoginPrompt","allEvents","filter","includes","id","userEventsRef","ref","userEventsRep","useDatabaseObjectData","userEvents","Object","values","sort","a","b","aStart","Date","startDate","bStart","aEnd","endDate","bEnd","summary","to","map","event","EventListItem","forceOpen"],"sourceRoot":""}