{"version":3,"file":"static/js/70.a0885c51.chunk.js","mappings":"kOASMA,GAAS,eAAAC,KAAAA,YAAAC,MAAAA,aAWTC,EAAe,WACpB,OAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAYC,EAAAA,EAAAA,UAAQ,WACzB,OAAQJ,IAAUA,EAAMK,WAAaL,EAAMK,YAAc,KACvD,CAACL,IAEEM,GAAQF,EAAAA,EAAAA,UAAQ,WACrB,OAAID,EAAkB,KACfH,EAAMK,UAAUE,MAAKC,SAAAA,GAAC,OAAIA,EAAEP,KAAOA,OACxC,CAACA,EAAIE,EAAWH,EAAMK,YAEzB,OACC,UAACV,EAAD,YACC,SAAC,KAAD,4BACCQ,GAAY,SAAC,IAAD,IAAcG,GAAQ,SAAC,IAAD,CAAeA,MAAOA,EAAsBG,WAA5C,GAAkCH,EAAML,KAAmB,+CAKjG,WAAeS,EAAAA,EAAAA,MAAKZ,G,qCCxCpB","sources":["pages/EventDetails.js","webpack://celebration-calendar/./src/pages/EventDetails.js?49a7"],"sourcesContent":["import { memo, useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { styled } from 'linaria/react'\n\nimport EventListItem from 'components/events/EventListItem'\nimport Loading from 'components/Loading'\nimport { PageTitle } from 'components/styles'\nimport { useEventContext } from 'context/EventContext'\n\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\toverflow-x: hidden;\n\tbackground: var(--bg);\n\tborder-radius: 8px;\n\tflex-direction: column;\n\talign-items: center;\n`\n\nconst EventDetails = () => {\n\tconst [state] = useEventContext()\n\tconst { id } = useParams()\n\n\tconst isLoading = useMemo(() => {\n\t\treturn !state || !state.allEvents || state.allEvents === []\n\t}, [state])\n\n\tconst event = useMemo(() => {\n\t\tif (isLoading) return null\n\t\treturn state.allEvents.find(e => e.id === id)\n\t}, [id, isLoading, state.allEvents])\n\n\treturn (\n\t\t<Container>\n\t\t\t<PageTitle>Event Details</PageTitle>\n\t\t\t{isLoading ? <Loading /> : event ? <EventListItem event={event} key={event.id} forceOpen /> : <div>Invalid Event</div>}\n\t\t</Container>\n\t)\n}\n\nexport default memo(EventDetails)\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Container","name","class","EventDetails","useEventContext","state","id","useParams","isLoading","useMemo","allEvents","event","find","e","forceOpen","memo"],"sourceRoot":""}