{"version":3,"file":"static/js/553.92cc239c.chunk.js","mappings":"mOASMA,GAAS,eAAAC,KAAAA,YAAAC,MAAAA,YAUTC,GAAS,eAAAF,KAAAA,YAAAC,MAAAA,aAQTE,EAAe,WACpB,OAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACQC,GAAUC,EAAAA,EAAAA,MAAVD,MAEFE,GAAYC,EAAAA,EAAAA,UAAQ,WACzB,OAAQJ,IAAUA,EAAMK,WAAaL,EAAMK,YAAc,KACvD,CAACL,IAEEM,GAASF,EAAAA,EAAAA,UAAQ,WACtB,GAAID,EAAW,OAAO,KACtB,IAAMI,EAAaN,EAAMO,cACzB,OAAOR,EAAMK,UAAUI,QAAOC,SAAAA,GAAC,OAAIA,EAAET,MAAMU,OAAOH,gBAAkBD,OAClE,CAACN,EAAOE,EAAWH,EAAMK,YAEtBO,GAAYR,EAAAA,EAAAA,UAAQ,WACzB,OAAOE,GAAUA,EAAOO,OAAS,IAC/B,CAACP,IAEJ,OACC,UAACZ,EAAD,YACC,UAAC,KAAD,yBAAuBO,EAAvB,QACA,SAACJ,EAAD,UACEM,GAAY,SAAC,IAAD,IAAcS,EAAYN,EAAOQ,KAAIJ,SAAAA,GAAC,OAAI,SAAC,IAAD,CAAeK,MAAOL,EAAcM,WAApC,GAA8BN,EAAEO,QAAoB,SAAC,IAAD,UAM/G,WAAeC,EAAAA,EAAAA,MAAKpB,G,qCCtDpB","sources":["pages/VenueDetails.js","webpack://celebration-calendar/./src/pages/VenueDetails.js?829c"],"sourcesContent":["import { memo, useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { styled } from 'linaria/react'\n\nimport EventListItem from 'components/events/EventListItem'\nimport Loading from 'components/Loading'\nimport { PageTitle } from 'components/styles'\nimport { useEventContext } from 'context/EventContext'\n\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\toverflow-x: hidden;\n\tbackground: var(--bg);\n\tborder-radius: 8px;\n\tflex-direction: column;\n\talign-items: center;\n`\nconst ScrollBox = styled.div`\n\twidth: 100%;\n\toverflow-y: scroll;\n\t::-webkit-scrollbar-corner {\n\t\tbackground: var(--transparent);\n\t}\n`\n\nconst VenueDetails = () => {\n\tconst [state] = useEventContext()\n\tconst { venue } = useParams()\n\n\tconst isLoading = useMemo(() => {\n\t\treturn !state || !state.allEvents || state.allEvents === []\n\t}, [state])\n\n\tconst events = useMemo(() => {\n\t\tif (isLoading) return null\n\t\tconst lowerVenue = venue.toLowerCase()\n\t\treturn state.allEvents.filter(e => e.venue.trim().toLowerCase() === lowerVenue)\n\t}, [venue, isLoading, state.allEvents])\n\n\tconst hasEvents = useMemo(() => {\n\t\treturn events && events.length > 0\n\t}, [events])\n\n\treturn (\n\t\t<Container>\n\t\t\t<PageTitle>Events in \"{venue}\"</PageTitle>\n\t\t\t<ScrollBox>\n\t\t\t\t{isLoading ? <Loading /> : hasEvents ? events.map(e => <EventListItem event={e} key={e.id} forceOpen />) : <Loading />}\n\t\t\t</ScrollBox>\n\t\t</Container>\n\t)\n}\n\nexport default memo(VenueDetails)\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Container","name","class","ScrollBox","VenueDetails","useEventContext","state","venue","useParams","isLoading","useMemo","allEvents","events","lowerVenue","toLowerCase","filter","e","trim","hasEvents","length","map","event","forceOpen","id","memo"],"sourceRoot":""}